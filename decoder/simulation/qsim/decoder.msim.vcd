$comment
	File created using the following command:
		vcd file decoder.msim.vcd -direction
$end
$date
	Fri Oct 27 20:48:01 2017
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module decoder_vhd_vec_tst $end
$var wire 1 ! accload $end
$var wire 1 " ALUinsel $end
$var wire 1 # branch_offset [15] $end
$var wire 1 $ branch_offset [14] $end
$var wire 1 % branch_offset [13] $end
$var wire 1 & branch_offset [12] $end
$var wire 1 ' branch_offset [11] $end
$var wire 1 ( branch_offset [10] $end
$var wire 1 ) branch_offset [9] $end
$var wire 1 * branch_offset [8] $end
$var wire 1 + branch_offset [7] $end
$var wire 1 , branch_offset [6] $end
$var wire 1 - branch_offset [5] $end
$var wire 1 . branch_offset [4] $end
$var wire 1 / branch_offset [3] $end
$var wire 1 0 branch_offset [2] $end
$var wire 1 1 branch_offset [1] $end
$var wire 1 2 branch_offset [0] $end
$var wire 1 3 C $end
$var wire 1 4 controlUnit [7] $end
$var wire 1 5 controlUnit [6] $end
$var wire 1 6 controlUnit [5] $end
$var wire 1 7 controlUnit [4] $end
$var wire 1 8 controlUnit [3] $end
$var wire 1 9 controlUnit [2] $end
$var wire 1 : controlUnit [1] $end
$var wire 1 ; controlUnit [0] $end
$var wire 1 < instruction [15] $end
$var wire 1 = instruction [14] $end
$var wire 1 > instruction [13] $end
$var wire 1 ? instruction [12] $end
$var wire 1 @ instruction [11] $end
$var wire 1 A instruction [10] $end
$var wire 1 B instruction [9] $end
$var wire 1 C instruction [8] $end
$var wire 1 D instruction [7] $end
$var wire 1 E instruction [6] $end
$var wire 1 F instruction [5] $end
$var wire 1 G instruction [4] $end
$var wire 1 H instruction [3] $end
$var wire 1 I instruction [2] $end
$var wire 1 J instruction [1] $end
$var wire 1 K instruction [0] $end
$var wire 1 L memwrite $end
$var wire 1 M mux1sel $end
$var wire 1 N mux2sel [1] $end
$var wire 1 O mux2sel [0] $end
$var wire 1 P N $end
$var wire 1 Q opcode [4] $end
$var wire 1 R opcode [3] $end
$var wire 1 S opcode [2] $end
$var wire 1 T opcode [1] $end
$var wire 1 U opcode [0] $end
$var wire 1 V pc_opcode [1] $end
$var wire 1 W pc_opcode [0] $end
$var wire 1 X Z $end

$scope module i1 $end
$var wire 1 Y gnd $end
$var wire 1 Z vcc $end
$var wire 1 [ unknown $end
$var wire 1 \ devoe $end
$var wire 1 ] devclrn $end
$var wire 1 ^ devpor $end
$var wire 1 _ ww_devoe $end
$var wire 1 ` ww_devclrn $end
$var wire 1 a ww_devpor $end
$var wire 1 b ww_instruction [15] $end
$var wire 1 c ww_instruction [14] $end
$var wire 1 d ww_instruction [13] $end
$var wire 1 e ww_instruction [12] $end
$var wire 1 f ww_instruction [11] $end
$var wire 1 g ww_instruction [10] $end
$var wire 1 h ww_instruction [9] $end
$var wire 1 i ww_instruction [8] $end
$var wire 1 j ww_instruction [7] $end
$var wire 1 k ww_instruction [6] $end
$var wire 1 l ww_instruction [5] $end
$var wire 1 m ww_instruction [4] $end
$var wire 1 n ww_instruction [3] $end
$var wire 1 o ww_instruction [2] $end
$var wire 1 p ww_instruction [1] $end
$var wire 1 q ww_instruction [0] $end
$var wire 1 r ww_opcode [4] $end
$var wire 1 s ww_opcode [3] $end
$var wire 1 t ww_opcode [2] $end
$var wire 1 u ww_opcode [1] $end
$var wire 1 v ww_opcode [0] $end
$var wire 1 w ww_controlUnit [7] $end
$var wire 1 x ww_controlUnit [6] $end
$var wire 1 y ww_controlUnit [5] $end
$var wire 1 z ww_controlUnit [4] $end
$var wire 1 { ww_controlUnit [3] $end
$var wire 1 | ww_controlUnit [2] $end
$var wire 1 } ww_controlUnit [1] $end
$var wire 1 ~ ww_controlUnit [0] $end
$var wire 1 !! ww_mux2sel [1] $end
$var wire 1 "! ww_mux2sel [0] $end
$var wire 1 #! ww_N $end
$var wire 1 $! ww_Z $end
$var wire 1 %! ww_C $end
$var wire 1 &! ww_branch_offset [15] $end
$var wire 1 '! ww_branch_offset [14] $end
$var wire 1 (! ww_branch_offset [13] $end
$var wire 1 )! ww_branch_offset [12] $end
$var wire 1 *! ww_branch_offset [11] $end
$var wire 1 +! ww_branch_offset [10] $end
$var wire 1 ,! ww_branch_offset [9] $end
$var wire 1 -! ww_branch_offset [8] $end
$var wire 1 .! ww_branch_offset [7] $end
$var wire 1 /! ww_branch_offset [6] $end
$var wire 1 0! ww_branch_offset [5] $end
$var wire 1 1! ww_branch_offset [4] $end
$var wire 1 2! ww_branch_offset [3] $end
$var wire 1 3! ww_branch_offset [2] $end
$var wire 1 4! ww_branch_offset [1] $end
$var wire 1 5! ww_branch_offset [0] $end
$var wire 1 6! ww_pc_opcode [1] $end
$var wire 1 7! ww_pc_opcode [0] $end
$var wire 1 8! ww_mux1sel $end
$var wire 1 9! ww_accload $end
$var wire 1 :! ww_ALUinsel $end
$var wire 1 ;! ww_memwrite $end
$var wire 1 <! \opcode[0]~output_o\ $end
$var wire 1 =! \opcode[1]~output_o\ $end
$var wire 1 >! \opcode[2]~output_o\ $end
$var wire 1 ?! \opcode[3]~output_o\ $end
$var wire 1 @! \opcode[4]~output_o\ $end
$var wire 1 A! \controlUnit[0]~output_o\ $end
$var wire 1 B! \controlUnit[1]~output_o\ $end
$var wire 1 C! \controlUnit[2]~output_o\ $end
$var wire 1 D! \controlUnit[3]~output_o\ $end
$var wire 1 E! \controlUnit[4]~output_o\ $end
$var wire 1 F! \controlUnit[5]~output_o\ $end
$var wire 1 G! \controlUnit[6]~output_o\ $end
$var wire 1 H! \controlUnit[7]~output_o\ $end
$var wire 1 I! \mux2sel[0]~output_o\ $end
$var wire 1 J! \mux2sel[1]~output_o\ $end
$var wire 1 K! \branch_offset[0]~output_o\ $end
$var wire 1 L! \branch_offset[1]~output_o\ $end
$var wire 1 M! \branch_offset[2]~output_o\ $end
$var wire 1 N! \branch_offset[3]~output_o\ $end
$var wire 1 O! \branch_offset[4]~output_o\ $end
$var wire 1 P! \branch_offset[5]~output_o\ $end
$var wire 1 Q! \branch_offset[6]~output_o\ $end
$var wire 1 R! \branch_offset[7]~output_o\ $end
$var wire 1 S! \branch_offset[8]~output_o\ $end
$var wire 1 T! \branch_offset[9]~output_o\ $end
$var wire 1 U! \branch_offset[10]~output_o\ $end
$var wire 1 V! \branch_offset[11]~output_o\ $end
$var wire 1 W! \branch_offset[12]~output_o\ $end
$var wire 1 X! \branch_offset[13]~output_o\ $end
$var wire 1 Y! \branch_offset[14]~output_o\ $end
$var wire 1 Z! \branch_offset[15]~output_o\ $end
$var wire 1 [! \pc_opcode[0]~output_o\ $end
$var wire 1 \! \pc_opcode[1]~output_o\ $end
$var wire 1 ]! \mux1sel~output_o\ $end
$var wire 1 ^! \accload~output_o\ $end
$var wire 1 _! \ALUinsel~output_o\ $end
$var wire 1 `! \memwrite~output_o\ $end
$var wire 1 a! \instruction[8]~input_o\ $end
$var wire 1 b! \instruction[9]~input_o\ $end
$var wire 1 c! \instruction[10]~input_o\ $end
$var wire 1 d! \instruction[11]~input_o\ $end
$var wire 1 e! \instruction[15]~input_o\ $end
$var wire 1 f! \instruction[0]~input_o\ $end
$var wire 1 g! \instruction[1]~input_o\ $end
$var wire 1 h! \instruction[2]~input_o\ $end
$var wire 1 i! \instruction[3]~input_o\ $end
$var wire 1 j! \instruction[4]~input_o\ $end
$var wire 1 k! \instruction[5]~input_o\ $end
$var wire 1 l! \instruction[6]~input_o\ $end
$var wire 1 m! \instruction[7]~input_o\ $end
$var wire 1 n! \Z~input_o\ $end
$var wire 1 o! \C~input_o\ $end
$var wire 1 p! \Mux3~3_combout\ $end
$var wire 1 q! \N~input_o\ $end
$var wire 1 r! \Mux3~2_combout\ $end
$var wire 1 s! \instruction[14]~input_o\ $end
$var wire 1 t! \instruction[13]~input_o\ $end
$var wire 1 u! \instruction[12]~input_o\ $end
$var wire 1 v! \Mux3~6_combout\ $end
$var wire 1 w! \Mux3~4_combout\ $end
$var wire 1 x! \Mux3~5_combout\ $end
$var wire 1 y! \Mux4~1_combout\ $end
$var wire 1 z! \Mux7~1_combout\ $end
$var wire 1 {! \Mux7~2_combout\ $end
$var wire 1 |! \Mux7~0_combout\ $end
$var wire 1 }! \Mux4~0_combout\ $end
$var wire 1 ~! \Mux7~3_combout\ $end
$var wire 1 !" \Mux5~0_combout\ $end
$var wire 1 "" \memwrite~0_combout\ $end
$var wire 1 #" \Mux6~0_combout\ $end
$var wire 1 $" \ALT_INV_Mux6~0_combout\ $end
$var wire 1 %" \ALT_INV_Mux3~5_combout\ $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
03
0L
0M
0P
1X
0Y
1Z
x[
1\
1]
1^
1_
1`
1a
0#!
1$!
0%!
08!
09!
0:!
0;!
1<!
1=!
1>!
0?!
0@!
0A!
1B!
0C!
1D!
1E!
1F!
1G!
1H!
0I!
0J!
0K!
1L!
0M!
1N!
1O!
1P!
1Q!
1R!
1S!
1T!
1U!
1V!
1W!
1X!
1Y!
1Z!
0[!
1\!
0]!
0^!
0_!
0`!
1a!
1b!
1c!
0d!
0e!
0f!
1g!
0h!
1i!
1j!
1k!
1l!
1m!
1n!
0o!
1p!
0q!
1r!
0s!
1t!
0u!
1v!
1w!
0x!
0y!
1z!
1{!
0|!
1}!
0~!
0!"
0""
1#"
0$"
1%"
0<
0=
1>
0?
0@
1A
1B
1C
1D
1E
1F
1G
1H
0I
1J
0K
0b
0c
1d
0e
0f
1g
1h
1i
1j
1k
1l
1m
1n
0o
1p
0q
0r
0s
1t
1u
1v
1w
1x
1y
1z
1{
0|
1}
0~
0!!
0"!
1&!
1'!
1(!
1)!
1*!
1+!
1,!
1-!
1.!
1/!
10!
11!
12!
03!
14!
05!
16!
07!
1#
1$
1%
1&
1'
1(
1)
1*
1+
1,
1-
1.
1/
00
11
02
14
15
16
17
18
09
1:
0;
0N
0O
0Q
0R
1S
1T
1U
1V
0W
$end
#280000
1<
1@
0A
0D
0E
1I
1K
0X
1q
1o
0k
0j
0g
1f
1b
0$!
0n!
1e!
1d!
0c!
0m!
0l!
1h!
1f!
0w!
0z!
1""
0v!
1~!
1!"
0p!
1x!
1A!
1K!
1C!
1M!
0G!
0Q!
0H!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0>!
1?!
1@!
0%"
1~
15!
1|
13!
0x
0/!
0w
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0t
1s
1r
1_!
1^!
1;
19
05
04
12
10
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0S
1R
1Q
1:!
19!
1[!
1"
1!
0\!
17!
06!
1W
0V
#500000
0@
1A
0I
1?
0F
0G
0H
0J
0p
0o
0n
0m
0l
1g
0f
1e
1u!
0d!
1c!
0k!
0j!
0i!
0h!
0g!
1z!
0""
1y!
0#"
0{!
0B!
0L!
0C!
0M!
0D!
0N!
0E!
0O!
0F!
0P!
1>!
0?!
1$"
0~!
0}
04!
0|
03!
0{
02!
0z
01!
0y
00!
1t
0s
1]!
0:
09
08
07
06
01
00
0/
0.
0-
1S
0R
18!
1M
1`!
0^!
1;!
09!
1L
0!
#740000
1@
0?
0<
0K
1=
0>
0q
1f
0e
0d
1c
0b
0e!
1s!
0t!
0u!
1d!
0f!
0z!
1""
1{!
0y!
0}!
1|!
0!"
1#"
0$"
1~!
0A!
0K!
1?!
0@!
0~
05!
1s
0r
0_!
0]!
0;
02
1R
0Q
0`!
0:!
08!
1^!
0;!
0"
0M
19!
0L
1!
#1000000
